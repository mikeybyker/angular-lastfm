{"version":3,"sources":["angular.lastfm.js"],"names":["LastFM","endPoint","config","api_key","format","this","setAPIKey","key","getAPIKey","setFormat","getFormat","setEndPoint","url","getEndPoint","$get","$q","$http","LastFMService","version","http","settings","options","params","getParams","get","angular","extend","getSettings","fieldName","isMbid","mbid","str","mbidPattern","test","_getAlbumInfo","artistOrMbid","album","artist","method","getAlbumInfo","apply","_p","arguments","then","response","data","error","reject","_getAlbumTopTags","getAlbumTopTags","toptags","tag","_searchAlbum","searchAlbum","results","albummatches","_getArtistInfo","getArtistInfo","_getSimilar","getSimilar","similarartists","_getTopAlbums","getTopAlbums","topalbums","_getArtistTopTags","getArtistTopTags","_getTopTracks","getTopTracks","toptracks","track","_searchArtists","searchArtists","artistmatches","_getTopArtists","getTopArtists","artists","_getChartsTopTags","getChartsTopTags","tags","_getChartsTopTracks","getChartsTopTracks","tracks","_getTopGeoArtists","country","getTopGeoArtists","topartists","_getTopGeoTracks","getTopGeoTracks","_getTrackInfo","getTrackInfo","_getSimilarTrack","getSimilarTrack","similartracks","_getTrackTopTags","getTrackTopTags","_searchTrack","searchTrack","prototype","trackmatches","reason","statusText","message","Album","getInfo","getTopTags","search","_getInfo","_getTopTags","_search","Artist","Charts","Geo","Track","module","provider"],"mappings":"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","file":"angular.lastfm.min.js","sourcesContent":["(function(){\r\n    'use strict';\r\n\r\n    angular\r\n        .module('lastfm', [])\r\n        .provider('LastFM', LastFM);\r\n\r\n    function LastFM(){\r\n\r\n        var endPoint = 'http://ws.audioscrobbler.com/2.0/',\r\n            config = {api_key: null, format: 'json'};\r\n\r\n        this.setAPIKey = function (key) {\r\n            config.api_key = key;\r\n            return config.api_key;\r\n        };\r\n        this.getAPIKey = function () {\r\n            return config.api_key;\r\n        };\r\n        this.setFormat = function (format) {\r\n            config.format = format;\r\n            return config.format;\r\n        };\r\n        this.getFormat = function () {\r\n            return config.format;\r\n        };\r\n        this.setEndPoint = function (url) {\r\n            endPoint = url;\r\n            return endPoint;\r\n        };\r\n        this.getEndPoint = function () {\r\n            return endPoint;\r\n        };\r\n\r\n        this.$get = function($q, $http){\r\n\r\n            // Regex for matching Music Brainz Identifier (mbid)\r\n            var mbidPattern = /^[a-fA-F0-9]{8}(-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}$/;\r\n\r\n            function LastFMService() {\r\n                this.version = '1.0.0';\r\n                if(!config.api_key){\r\n                    throw ('LastFm API key NOT set : Use setAPIKey on the provider in config...');\r\n                }\r\n            }\r\n\r\n            function http(settings, options){\r\n                var params = getParams(settings, options);\r\n                return $http.get(endPoint, {params: params});\r\n            }\r\n\r\n            function getParams(settings, options){\r\n                return  angular.extend(\r\n                            {},             // So we don't pollute the objects\r\n                            config,         // api_key and format\r\n                            settings,       // method etc.\r\n                            options || {}   // user options\r\n                        );\r\n            }\r\n\r\n            function getSettings(settings, fieldName){\r\n                fieldName = fieldName || 'artist';\r\n                if(isMbid(settings[fieldName])){\r\n                    settings.mbid = settings[fieldName];\r\n                    settings[fieldName] = '';\r\n                    // or... mbid takes precedence, regardless\r\n                    // delete settings[fieldName];\r\n                }\r\n                return settings;\r\n            }\r\n\r\n            function isMbid(str){\r\n                return mbidPattern.test(str);\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/album.getInfo\r\n            function _getAlbumInfo(artistOrMbid, album, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            album: album,\r\n                            method: 'album.getinfo'                            // mbid: mbid,\r\n                            // autocorrect: 1,\r\n                            // lang: 'de'\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getAlbumInfo(artistOrMbid, album, options){\r\n                return _getAlbumInfo.apply(_p, arguments)\r\n                        .then(function(response){\r\n                            if(response.data.error || !response.data.album){\r\n                                return reject(response, 'Couldn\\'t find this album');\r\n                            }\r\n                            return response.data.album;\r\n                        });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/album.getTopTags\r\n            /*\r\n                Note: Docs say artist & album optional if mbid is used...\r\n                That appers wrong - supplying mbid returns error artist/album missing.\r\n            */\r\n            function _getAlbumTopTags(artistOrMbid, album, options){\r\n                var settings = {\r\n                            method: 'album.gettoptags',\r\n                            album :album,\r\n                            artist :artistOrMbid\r\n                            // mbid :mbid,\r\n                            // autocorrect: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            //\r\n            function getAlbumTopTags(artistOrMbid, album, options){\r\n                return _getAlbumTopTags.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.toptags){\r\n                            return reject(response, 'Error looking up tags');\r\n                        }\r\n                        return response.data.toptags.tag;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/album.search\r\n            function _searchAlbum(album, options){\r\n                var settings = {\r\n                            album: album,\r\n                            method: 'album.search'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            // Return the actual albums found, rather than end user digging the data for them...\r\n            function searchAlbum(album, options){\r\n                return _searchAlbum.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.results || !response.data.results.albummatches){\r\n                            return reject(response, 'Couldn\\'t find this album');\r\n                        }\r\n                        return response.data.results.albummatches.album;\r\n                    });\r\n            }\r\n\r\n\r\n            // Artist\r\n\r\n            // Docs: http://www.last.fm/api/show/artist.getInfo\r\n            function _getArtistInfo(artistOrMbid, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            method: 'artist.getinfo'\r\n                            // mbid: mbid,\r\n                            // autocorrect: 1,\r\n                            // lang: 'de'\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getArtistInfo(artistOrMbid, options){\r\n                return _getArtistInfo.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.artist){\r\n                            return reject(response, 'Couldn\\'t find artist');\r\n                        }\r\n                        return response.data.artist;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/artist.getSimilar\r\n            function _getSimilar(artistOrMbid, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            method: 'artist.getsimilar'\r\n                            // mbid: mbid,\r\n                            // limit: 10,\r\n                            // autocorrect: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getSimilar(artistOrMbid, options){\r\n                return _getSimilar.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.similarartists){\r\n                            return reject(response, 'Couldn\\'t find similar artists');\r\n                        }\r\n                        return response.data.similarartists.artist;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/artist.getTopAlbums\r\n            function _getTopAlbums(artistOrMbid, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            method: 'artist.gettopalbums'\r\n                            // mbid: mbid,\r\n                            // limit: 10,\r\n                            // autocorrect: 1,\r\n                            // page: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getTopAlbums(artistOrMbid, options){\r\n                return _getTopAlbums.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.topalbums){\r\n                            return reject(response, 'Couldn\\'t find albums');\r\n                        }\r\n                        return response.data.topalbums.album;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/artist.getTopTags\r\n            function _getArtistTopTags(artistOrMbid, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            method: 'artist.gettoptags'\r\n                            // mbid: mbid,\r\n                            // autocorrect: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getArtistTopTags(artistOrMbid, options){\r\n                return _getArtistTopTags.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.toptags){\r\n                            return reject(response, 'Couldn\\'t find tags');\r\n                        }\r\n                        return response.data.toptags.tag;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/artist.getTopTracks\r\n            function _getTopTracks(artistOrMbid, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            method: 'artist.gettoptracks'\r\n                            // mbid: mbid,\r\n                            // limit: 10,\r\n                            // autocorrect: 1,\r\n                            // page: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getTopTracks(artistOrMbid, options){\r\n                return _getTopTracks.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.toptracks){\r\n                            return reject(response, 'Couldn\\'t find tracks');\r\n                        }\r\n                        return response.data.toptracks.track;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/artist.search\r\n            function _searchArtists(artist, options) {\r\n                var settings = {\r\n                            artist: artist,\r\n                            method: 'artist.search'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function searchArtists(artist, options) {\r\n                return _searchArtists.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.results || !response.data.results.artistmatches){\r\n                            return reject(response, 'Couldn\\'t find artist');\r\n                        }\r\n                        return response.data.results.artistmatches.artist;\r\n                    });\r\n            }\r\n\r\n\r\n            // Charts\r\n\r\n            // Docs: http://www.last.fm/api/show/chart.getTopArtists\r\n            function _getTopArtists(options){\r\n                var settings = {\r\n                            method: 'chart.gettopartists'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function getTopArtists(options){\r\n                return _getTopArtists.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.artists){\r\n                            return reject(response, 'Couldn\\'t find artist');\r\n                        }\r\n                        return response.data.artists.artist;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/chart.getTopTags\r\n            function _getChartsTopTags(options){\r\n                var settings = {\r\n                            method: 'chart.gettoptags'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function getChartsTopTags(options){\r\n                return _getChartsTopTags.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.tags){\r\n                            return reject(response, 'Couldn\\'t find tags');\r\n                        }\r\n                        return response.data.tags.tag;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/chart.getTopTracks\r\n            function _getChartsTopTracks(options){\r\n                var settings = {\r\n                            method: 'chart.gettoptracks'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function getChartsTopTracks(options){\r\n                return _getChartsTopTracks.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.tracks){\r\n                            return reject(response, 'Couldn\\'t find tracks');\r\n                        }\r\n                        return response.data.tracks.track;\r\n                    });\r\n            }\r\n\r\n\r\n            // Geo\r\n\r\n            // Docs: http://www.last.fm/api/show/geo.getTopArtists\r\n            function _getTopGeoArtists(country, options){\r\n                var settings = {\r\n                            country: country,\r\n                            method: 'geo.gettopartists'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function getTopGeoArtists(country, options){\r\n                return _getTopGeoArtists.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.topartists){\r\n                            return reject(response, 'Couldn\\'t find artists');\r\n                        }\r\n                        return response.data.topartists.artist;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/geo.getTopTracks\r\n            function _getTopGeoTracks(country, options){\r\n                var settings = {\r\n                            country: country,\r\n                            method: 'geo.gettoptracks'\r\n                            // limit: 10,\r\n                            // page: 1,\r\n                            // location: 'Manchester'\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function getTopGeoTracks(country, options){\r\n                return _getTopGeoTracks.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.tracks){\r\n                            return reject(response, 'Couldn\\'t find tracks');\r\n                        }\r\n                        return response.data.tracks.track;\r\n                    });\r\n            }\r\n\r\n\r\n            // Track\r\n\r\n            // Docs: http://www.last.fm/api/show/track.getInfo\r\n            function _getTrackInfo(artistOrMbid, track, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            track: track,\r\n                            method: 'track.getInfo'\r\n                            // mbid: mbid,\r\n                            // autocorrect: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getTrackInfo(artistOrMbid, track, options){\r\n                return _getTrackInfo.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.track){\r\n                            return reject(response, 'Couldn\\'t find track');\r\n                        }\r\n                        return response.data.track;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/track.getSimilar\r\n            function _getSimilarTrack(artistOrMbid, track, options){\r\n                var settings = {\r\n                            artist: artistOrMbid,\r\n                            track: track,\r\n                            method: 'track.getsimilar'\r\n                            // mbid: mbid,\r\n                            // autocorrect: 1,\r\n                            // limit: 10\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getSimilarTrack(artistOrMbid, track, options){\r\n                return _getSimilarTrack.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.similartracks){\r\n                            return reject(response, 'Couldn\\'t find similar tracks');\r\n                        }\r\n                        return response.data.similartracks.track;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/track.getTopTags\r\n            function _getTrackTopTags(artist, track, options){\r\n                var settings = {\r\n                            artist: artist,\r\n                            track: track,\r\n                            method: 'track.gettoptags'\r\n                            // mbid: mbid,\r\n                            // autocorrect: 1\r\n                    };\r\n                settings = getSettings(settings);\r\n                return http(settings, options);\r\n            }\r\n            function getTrackTopTags(artist, track, options){\r\n                return _getTrackTopTags.apply(_p, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.toptags){\r\n                            return reject(response, 'Couldn\\'t find tags');\r\n                        }\r\n                        return response.data.toptags.tag;\r\n                    });\r\n            }\r\n\r\n            // Docs: http://www.last.fm/api/show/track.search\r\n            function _searchTrack(track, options){\r\n                var settings = {\r\n                            track: track,\r\n                            method: 'track.search'\r\n                            // limit: 10,\r\n                            // page: 1\r\n                    };\r\n                return http(settings, options);\r\n            }\r\n            function searchTrack(track, options){\r\n                // console.log(LastFMService.prototype);\r\n                return _searchTrack.apply(LastFMService.prototype, arguments)\r\n                    .then(function(response){\r\n                        if(response.data.error || !response.data.results || !response.data.results.trackmatches){\r\n                            return reject(response, 'Couldn\\'t find track');\r\n                        }\r\n                        return response.data.results.trackmatches.track;\r\n                    });\r\n            }\r\n\r\n\r\n            function reject(response, reason){\r\n                var error = {\r\n                        error: response.data.error || true,\r\n                        statusText: response.data.message || (reason || 'Error')\r\n                    };\r\n                return $q.reject(error);\r\n            }\r\n\r\n            LastFMService.prototype = {\r\n                getParams :         getParams,\r\n                isMbid :            isMbid,\r\n                Album: {\r\n                    getInfo:        getAlbumInfo,\r\n                    getTopTags:     getAlbumTopTags,\r\n                    search:         searchAlbum,\r\n                    _getInfo:       _getAlbumInfo,\r\n                    _getTopTags:    _getAlbumTopTags,\r\n                    _search:        _searchAlbum\r\n                },\r\n                Artist: {\r\n                    getInfo:        getArtistInfo,\r\n                    getSimilar:     getSimilar,\r\n                    getTopAlbums:   getTopAlbums,\r\n                    getTopTags:     getArtistTopTags,\r\n                    getTopTracks:   getTopTracks,                    \r\n                    search:         searchArtists,\r\n                    _getInfo:       _getArtistInfo,\r\n                    _getSimilar:    _getSimilar,\r\n                    _getTopAlbums:  _getTopAlbums,\r\n                    _getTopTags:    _getArtistTopTags,\r\n                    _getTopTracks:  _getTopTracks,\r\n                    _search:        _searchArtists\r\n                },\r\n                Charts: {                    \r\n                    getTopArtists:  getTopArtists,\r\n                    getTopTags:     getChartsTopTags,\r\n                    getTopTracks:   getChartsTopTracks,                    \r\n                    _getTopArtists: _getTopArtists,\r\n                    _getTopTags:    _getChartsTopTags,\r\n                    _getTopTracks:  _getChartsTopTracks\r\n                },\r\n                Geo : {\r\n                     getTopArtists:  getTopGeoArtists,\r\n                     getTopTracks:   getTopGeoTracks,                   \r\n                    _getTopArtists: _getTopGeoArtists,\r\n                    _getTopTracks:  _getTopGeoTracks\r\n                },\r\n                Track: {                    \r\n                    getInfo:        getTrackInfo,\r\n                    getSimilar:     getSimilarTrack,\r\n                    getTopTags:     getTrackTopTags,\r\n                    search:         searchTrack,\r\n                    _getInfo:       _getTrackInfo,\r\n                    _getSimilar:    _getSimilarTrack,\r\n                    _getTopTags:    _getTrackTopTags,\r\n                    _search:        _searchTrack\r\n                }\r\n            }\r\n\r\n            var _p = LastFMService.prototype;\r\n\r\n            return new LastFMService();\r\n        }\r\n\r\n    }\r\n\r\n}());"],"sourceRoot":"/source/"}